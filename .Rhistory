ggmap(start_map) +
geom_polygon(data = state_milk_2017, mapping = aes(x = long, y = lat, group = group,
fill = milk_produced)) +
scale_fill_gradientn(colours = rev(rainbow(10)),
breaks = c(10000,20000,30000,40000),
trans = "identity") +
ditch_the_axes +
labs(fill = "Milk (Mil. Pounds)") +
ggtitle("US Milk Production by State, 2017")
# Try an animated map
# New Source: https://github.com/thomasp85/gganimate
# install.packages("cowplot")  # a gganimate dependency
# devtools::install_github("thomasp85/gganimate")
library(gganimate)
# install.packages("gifski")
library(gifski)
ggplot(mtcars, aes(factor(cyl), mpg)) +
geom_boxplot() +
# Here comes the gganimate code
transition_states(
gear,
transition_length = 2,
state_length = 1
) +
enter_fade() +
exit_shrink() +
ease_aes('sine-in-out')
anim <- ggplot(mtcars, aes(mpg, disp)) +
geom_point() +
geom_smooth(colour = 'grey', se = FALSE) +
geom_smooth(aes(colour = factor(gear))) +
transition_layers(layer_length = 1, transition_length = 2) +
enter_fade() + enter_grow()
anim
library(gapminder)
View(gapminder)
ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = country)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
facet_wrap(~continent) +
# Here comes the gganimate specific bits
labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
transition_time(year) +
ease_aes('linear')
# Can we extend to maps??
library(tidyverse)
library(lubridate)
library(transformr)
library(tweenr)
# https://github.com/thomasp85/gganimate/issues/177
# https://github.com/thomasp85/transformr
milkMapAnimated <- ggplot() +
geom_sf(data = states, fill = "grey80", color = "grey60") +
geom_sf(data = state_milk,
aes(fill = milk_produced)) +
scale_fill_gradientn(colours = rev(rainbow(10)),
breaks = c(10000,20000,30000,40000),
trans = "identity") +
ditch_the_axes
milkMapAnimated <- ggplot(data = state_milk) +
geom_polygon(aes(x=long, y = lat, fill = milk_produced, group = group),
color = "navy") +
coord_fixed(1) +
scale_fill_gradient(low = "blue", high = "red", limits = c(0,42339),
breaks = c(0, 10000,20000,30000,40000)) +
ditch_the_axes + #removes axes
transition_time(year) +
ease_aes('linear') +
labs(title = 'US Milk Production by State, {frame_time}',
fill = "Milk (Mil. Pounds)")
milkMapAnimated
milkMapAnimated <- ggplot() +
geom_sf(data = states, fill = "grey80", color = "grey60") +
geom_sf(data = state_milk,
aes(fill = milk_produced)) +
scale_fill_gradientn(colours = rev(rainbow(10)),
breaks = c(10000,20000,30000,40000),
trans = "identity") +
ditch_the_axes
milkMapAnimated
?geom_sf
milkMapAnimated <- ggplot(data = state_milk) +
geom_polygon(aes(x=long, y = lat, fill = milk_produced, group = group),
color = "navy") +
coord_fixed(1) +
scale_fill_gradient(low = "blue", high = "red", limits = c(0,42339),
breaks = c(0, 10000,20000,30000,40000)) +
ditch_the_axes + #removes axes
transition_time(year) +
ease_aes('linear') +
labs(title = 'US Milk Production by State, {frame_time}',
fill = "Milk (Mil. Pounds)")
milkMapAnimated
milkMapAnimated <- ggplot(data = state_milk) +
geom_polygon(aes(x=long, y = lat, fill = milk_produced, group = group),
color = "navy") +
coord_fixed(1) +
scale_fill_gradient(low = "blue", high = "red", limits = c(0,42339),
breaks = c(0, 10000,20000,30000,40000)) +
ditch_the_axes + #removes axes
transition_time(as.factor(year)) +
ease_aes('linear') +
labs(title = 'US Milk Production by State, {frame_time}',
fill = "Milk (Mil. Pounds)")
milkMapAnimated
milkMapAnimated <- ggplot(data = state_milk) +
geom_polygon(aes(x=long, y = lat, fill = milk_produced, group = group),
color = "navy") +
coord_fixed(1) +
scale_fill_gradient(low = "blue", high = "red", limits = c(0,42339),
breaks = c(0, 10000,20000,30000,40000)) +
ditch_the_axes + #removes axes
transition_manual(as.factor(year)) +
ease_aes('linear') +
labs(title = 'US Milk Production by State, {frame_time}',
fill = "Milk (Mil. Pounds)")
milkMapAnimated
anim_save("MilkMapAnimation", milkMapAnimated, path = path)
anim_save("MilkMapAnimation.mp4", animation = milkMapAnimated, path = path)
warnings()
milkMapAnimated <- ggplot(data = state_milk) +
geom_polygon(aes(x=long, y = lat, fill = milk_produced, group = group),
color = "navy") +
coord_fixed(1) +
scale_fill_gradient(low = "blue", high = "red", limits = c(0,42339),
breaks = c(0, 10000,20000,30000,40000)) +
ditch_the_axes + #removes axes
transition_manual(as.factor(year), transition_length = 2,
state_length = 1) +
ease_aes('linear') +
labs(title = 'US Milk Production by State, {frame_time}',
fill = "Milk (Mil. Pounds)")
milkMapAnimated <- ggplot(data = state_milk) +
geom_polygon(aes(x=long, y = lat, fill = milk_produced, group = group),
color = "navy") +
coord_fixed(1) +
scale_fill_gradient(low = "blue", high = "red", limits = c(0,42339),
breaks = c(0, 10000,20000,30000,40000)) +
ditch_the_axes + #removes axes
transition_manual(as.factor(year), transition_length = 2,
state_length = 48) +
ease_aes('linear') +
labs(title = 'US Milk Production by State, {frame_time}',
fill = "Milk (Mil. Pounds)")
milkMapAnimated
milkMapAnimated <- ggplot(data = state_milk) +
geom_polygon(aes(x=long, y = lat, fill = milk_produced, group = group),
color = "navy") +
coord_fixed(1) +
scale_fill_gradient(low = "blue", high = "red", limits = c(0,42339),
breaks = c(0, 10000,20000,30000,40000)) +
ditch_the_axes + #removes axes
transition_manual(as.factor(year), transition_length = 2) +
ease_aes('linear') +
labs(title = 'US Milk Production by State, {frame_time}',
fill = "Milk (Mil. Pounds)")
milkMapAnimated
?transition_manual
milkMapAnimated <- ggplot(data = state_milk) +
geom_polygon(aes(x=long, y = lat, fill = milk_produced, group = group),
color = "navy") +
coord_fixed(1) +
scale_fill_gradient(low = "blue", high = "red", limits = c(0,42339),
breaks = c(0, 10000,20000,30000,40000)) +
ditch_the_axes + #removes axes
transition_manual(as.factor(year)) +
ease_aes('linear') +
labs(title = 'US Milk Production by State, {frame_time}',
fill = "Milk (Mil. Pounds)")
milkMapAnimated
animate(milkMapAnimated)
#View(gapminder)
ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = country)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
facet_wrap(~continent) +
# Here comes the gganimate specific bits
labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
transition_time(year) +
ease_aes('linear')
ggplot(data = state_milk) +
geom_polygon(aes(x=long, y = lat, fill = milk_produced, group = group),
color = "navy") +
coord_fixed(1) +
scale_fill_gradient(low = "blue", high = "red", limits = c(0,42339),
breaks = c(0, 10000,20000,30000,40000)) +
ditch_the_axes + #removes axes
transition_manual(as.factor(year)) +
ease_aes('linear') +
labs(title = 'US Milk Production by State, {frame_time}',
fill = "Milk (Mil. Pounds)")
warnings()
ggplot(data = state_milk) +
geom_polygon(aes(x=long, y = lat, fill = milk_produced, group = group),
color = "navy") +
coord_fixed(1) +
scale_fill_gradient(low = "blue", high = "red", limits = c(0,42339),
breaks = c(0, 10000,20000,30000,40000)) +
ditch_the_axes + #removes axes
transition_manual(as.factor(year)) +
ease_aes('linear') +
labs(title = 'US Milk Production by State',
fill = "Milk (Mil. Pounds)")
milkMapAnimated <- ggplot(data = state_milk) +
geom_polygon(aes(x=long, y = lat, fill = milk_produced, group = group),
color = "navy") +
coord_fixed(1) +
scale_fill_gradient(low = "blue", high = "red", limits = c(0,42339),
breaks = c(0, 10000,20000,30000,40000)) +
ditch_the_axes + #removes axes
transition_manual(as.factor(year)) +
ease_aes('linear') +
labs(title = 'US Milk Production by State',
fill = "Milk (Mil. Pounds)")
animate(milkMapAnimated)
milkMapAnimated <- ggplot(data = state_milk) +
geom_polygon(aes(x=long, y = lat, fill = milk_produced, group = group),
color = "navy") +
coord_fixed(1) +
scale_fill_gradient(low = "blue", high = "red", limits = c(0,42339),
breaks = c(0, 10000,20000,30000,40000)) +
ditch_the_axes + #removes axes
transition_manual(as.factor(year)) +
ease_aes('linear') +
labs(title = 'US Milk Production by State',
fill = "Milk (Mil. Pounds)")
animate(milkMapAnimated)
milkMapAnimated <- ggplot(data = state_milk) +
geom_polygon(aes(x=long, y = lat, fill = milk_produced, group = group),
color = "navy") +
coord_fixed(1) +
scale_fill_gradientn(colours = rev(rainbow(10)),
#                     breaks = c(10000,20000,30000,40000),
trans = "log10") +
ditch_the_axes + #removes axes
transition_manual(as.factor(year)) +
ease_aes('linear') +
labs(title = 'US Milk Production by State',
fill = "Milk (Mil. Pounds)")
animate(milkMapAnimated)
milkMapAnimated <- ggplot(data = state_milk) +
geom_polygon(aes(x=long, y = lat, fill = milk_produced, group = group),
color = "navy") +
coord_fixed(1) +
scale_fill_gradientn(colours = rev(rainbow(10)),
#                     breaks = c(10000,20000,30000,40000),
trans = "log10") +
ditch_the_axes + #removes axes
transition_manual(as.factor(year)) +
ease_aes('linear') +
labs(title = 'US Milk Production by State: '{frame_time},
fill = "Milk (Mil. Pounds)")
milkMapAnimated <- ggplot(data = state_milk) +
geom_polygon(aes(x=long, y = lat, fill = milk_produced, group = group),
color = "black") +
coord_fixed(1) +
scale_fill_gradientn(colours = rev(rainbow(10)),
trans = "log10") +
ditch_the_axes + #removes axes
transition_manual(as.factor(year)) +
ease_aes('linear') +
labs(title = 'US Milk Production by State: {closest_state}',
fill = "Milk (Mil. Pounds)")
animate(milkMapAnimated)
warnings()
milkMapAnimated <- ggplot(data = state_milk) +
geom_polygon(aes(x=long, y = lat, fill = milk_produced, group = group),
color = "black") +
coord_fixed(1) +
scale_fill_gradientn(colours = rev(rainbow(10)),
trans = "log10") +
ditch_the_axes + #removes axes
transition_manual(as.factor(year)) +
ease_aes('linear') +
labs(title = 'US Milk Production by State: {frame_state}',
fill = "Milk (Mil. Pounds)")
animate(milkMapAnimated)
milkMapAnimated <- ggplot(data = state_milk) +
geom_polygon(aes(x=long, y = lat, fill = milk_produced, group = group),
color = "black") +
coord_fixed(1) +
scale_fill_gradientn(colours = rev(rainbow(10)),
trans = "log10") +
ditch_the_axes + #removes axes
transition_manual(as.factor(year)) +
ease_aes('linear') +
labs(title = 'US Milk Production by State: {current_frame}',
fill = "Milk (Mil. Pounds)")
animate(milkMapAnimated)
min(states_milk$milk_produced)
min(state_milk$milk_produced)
min(state_milk$milk_produced)
state_milk$milk_produced
#Install packages if you do not already have them (uncomment this code)
# install.packages(c("readr", "curl"))
# install.packages(c("ggplot2", "devtools", "dplyr", "stringr"))
# install.packages(c("maps", "mapdata"))
library(devtools)
# devtools::install_github("dkahle/ggmap")
# Load necessary packages
library(devtools)
library(readr)
library(curl)
library(ggplot2)
library(dplyr)
library(stringr)
library(maps)
library(mapdata)
library(ggmap)
# import data from Tidy Tuesday source on Github
cheese <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-01-29/clean_cheese.csv")
fluid_milk_sales <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-01-29/fluid_milk_sales.csv")
milk_facts <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-01-29/milk_products_facts.csv")
cow_facts <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-01-29/milkcow_facts.csv")
state_milk0 <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-01-29/state_milk_production.csv")
# Create data frame for map data of USA, using map_data function
usa <- map_data("usa")
states <- map_data("state")
china <- map_data("world") %>% filter(region == "China")
mapChina <- ggplot(data = china) +
geom_polygon(aes(x=long, y = lat, fill = region, group = group),
color = "navy") +
coord_fixed(1.1) + # aspect ratio = every y unit is 1.1 times longer than an x unit
guides(fill = FALSE) # leave off legend
# mapChina
mapStates <- ggplot(data = states) +
geom_polygon(aes(x=long, y = lat, fill = region, group = group),
color = "navy") +
coord_fixed(1.1) + # aspect ratio = every y unit is 1.1 times longer than an x unit
guides(fill = FALSE) # leave off legend
mapStates #map each state with its own color
#Now we will do a map of the states, except with milk production as the color
# We need to merge the geographic data from states dataframe, with milk data
#rename the columns of state_milk to be able to join it with states
names(state_milk0) <- c("big_region", "region", "year", "milk_produced")
state_milk <- state_milk0 %>% #convert milk production to millions lbs per year
mutate_at("milk_produced", function(x){x/1000000}) %>%
dplyr::select(-big_region) %>%   # get rid of big_region
dplyr::mutate_at("region", tolower) %>%  #change to lower case like states dataframe
dplyr::mutate_at("year", as.integer) %>%
full_join(states, by = "region") %>%
dplyr::select(-subregion)
state_milk_2017 <- state_milk %>%
dplyr::filter(year == 2017) # only look at 2017 milk
milkMap <- ggplot(data = state_milk_2017) +
geom_polygon(aes(x=long, y = lat, fill = milk_produced, group = group),
color = "navy") +
coord_fixed(1) # aspect ratio = every y unit is 1.1 times longer than an x unit
#  guides(fill = TRUE) # leave off legend
milkMap
# Create a theme to remove the axes' labels and tick marks
# if we wanted to remove everything, we could use theme_nothing()
ditch_the_axes <- theme(
axis.text = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank(),
title = element_text(size =16),
legend.title = element_text(size = 14),
legend.text = element_text(size = 12)
)
# change the color, remove axes labels
milkMap +
scale_fill_gradient(low = "blue", high = "red",
breaks = c(10000,20000,30000,40000)) +
ditch_the_axes + #removes axes, set text sizes
labs(fill = "Milk (Mil. Pounds)") +
ggtitle("US Milk Production by State, 2017")
#Make it rainbow
milkMap +
scale_fill_gradientn(colours = rev(rainbow(10)),
breaks = c(10000,20000,30000,40000),
trans = "identity") +
ditch_the_axes +
labs(fill = "Milk (Mil. Pounds)") +
ggtitle("US Milk Production by State, 2017")
path <- "C:/Users/eshee/Box Sync/Documents/Penn State Statistics/Research/B2D2K/ggplot2_tutorial"
ggsave(filename = "Fig1-USMilkProdMap.png",
plot = last_plot(),width = 30, height = 22, units = "cm",
dpi = 300, device = "png", path = path)      #save plot
unique(state_milk$milk_produced)
min(unique(state_milk$milk_produced))
unique(state_milk$milk_produced)[2]
sort(unique(state_milk$milk_produced))
sort(unique(state_milk$milk_produced))[2]
sort(unique(state_milk$milk_produced))[1]
milk_range <- sort(unique(state_milk$milk_produced)
lim <- c()[1], sort(unique(state_milk$milk_produced))[length(unique())])
milk_range <- sort(unique(state_milk$milk_produced))
lim <- c(min(milk_range), max(milk_range))
lim
milk_range <- sort(unique(state_milk$milk_produced))
lim <- c(min(milk_range), max(milk_range))
milkMapAnimated <- ggplot(data = state_milk) +
geom_polygon(aes(x=long, y = lat, fill = milk_produced, group = group),
color = "black") +
coord_fixed(1) +
scale_fill_gradientn(colours = rev(rainbow(10)), limits = lim,
trans = "log10") +
ditch_the_axes + #removes axes
transition_manual(as.factor(year)) +
ease_aes('linear') +
labs(title = 'US Milk Production by State: {current_frame}',
fill = "Milk (Mil. Pounds)")
animate(milkMapAnimated)
animate(milkMapAnimated)
anim_save("MilkMapAnimation.mp4", animation = milkMapAnimated, path = path)
milkMapAnimated <- ggplot(data = state_milk) +
geom_polygon(aes(x=long, y = lat, fill = milk_produced, group = group),
color = "black") +
coord_fixed(1) +
scale_fill_gradientn(colours = rev(rainbow(10)), limits = lim,
trans = "log10") +
ditch_the_axes + #removes axes
transition_manual(as.factor(year)) +
ease_aes('linear') +
labs(title = 'US Milk Production by State: {current_frame}',
fill = "Milk (Mil. Pounds)")
anim_save("MilkMapAnimation.gif", animation = milkMapAnimated, path = path)
View(state_milk)
# Try an animated map
# New Source: https://github.com/thomasp85/gganimate
# install.packages("cowplot")  # a gganimate dependency
# devtools::install_github("thomasp85/gganimate")
library(gganimate)
# install.packages("gifski")
library(gifski)
ggplot(mtcars, aes(factor(cyl), mpg)) +
geom_boxplot() +
# Here comes the gganimate code
transition_states(
gear,
transition_length = 2,
state_length = 1
) +
enter_fade() +
exit_shrink() +
ease_aes('sine-in-out')
animate(milkMapAnimated, fps = 4)
library(tidyverse)
install.packages("tidyverse")
anim <- ggplot(mtcars, aes(mpg, disp)) +
geom_point() +
geom_smooth(colour = 'grey', se = FALSE) +
geom_smooth(aes(colour = factor(gear))) +
transition_layers(layer_length = 1, transition_length = 2) +
enter_fade() + enter_grow()
anim
#View(gapminder)
ggplot(gapminder, aes(gdpPercap, lifeExp, size = pop, colour = country)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
facet_wrap(~continent) +
# Here comes the gganimate specific bits
labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
transition_time(year) +
ease_aes('linear')
milkMapAnimated <- ggplot(data = state_milk) +
geom_polygon(aes(x=long, y = lat, fill = milk_produced, group = group),
color = "black") +
coord_fixed(1) +
scale_fill_gradientn(colours = rev(rainbow(10)), limits = lim,
trans = "log10") +
ditch_the_axes + #removes axes
transition_manual(as.factor(year)) +
ease_aes('linear') +
labs(title = 'US Milk Production by State: {current_frame}',
fill = "Milk (Mil. Pounds)")
animate(milkMapAnimated, fps = 4, renderer = gifski_renderer(loop = TRUE))
animate(milkMapAnimated, fps = 8, renderer = gifski_renderer(loop = TRUE))
animate(milkMapAnimated, fps = 20, renderer = gifski_renderer(loop = TRUE))
library(ctv)
library(ape)
library(devtools)
#  Not able to load BiocManager, troubleshooting based on Stack Exchange:
#  https://stackoverflow.com/questions/41839214/installation-path-not-writable-r-unable-to-update-packages
# installed.packages()[, c("Package", "LibPath")]
# update.packages(ask = FALSE)
# install.packages(c("class", "codetools",
#                    "foreign", "lattice", "MASS", "Matrix", "mgcv", "survival"))
# if (!requireNamespace("BiocManager", quietly = TRUE)) {
#     install.packages("BiocManager")
# }
# BiocManager::install("phyloseq", version = "3.8")
library(colorspace)
library(rlang)
library(tibble)
library(phyloseq)
library(knitr)
library(phytools)
library(stringr)
new_abundaces <- read.csv('RawData/abundances_Mar2017.csv')
getwd()
library(plotrix)
candle = function(pos)
{
x=pos[1]
y=pos[2]
rect(x,y,x+.2,y+2,col="red")
#  polygon(c(x-.2,x+.4,x+.1,x-.2), c(y+2,y+2,y+2.4,y+2),col="orange")
polygon(c(x+.05,x-.1,x+.1,x+.3,x+.15,x+0.05), c(y+2,y+2.3,y+2.6,y+2.3,y+2,y+2),col="orange")
#Save the plot to your folder
path <- "C:/Users/eshee/Box Sync/Documents/Penn State Statistics/Research/B2D2K/ggplot2_tutorial"
setwd(path)
